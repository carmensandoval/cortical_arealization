<!-- Sankey generated in R 4.0.2 by googleVis 0.6.6 package -->
<!-- Tue Oct 13 01:43:07 2020 -->


<!-- jsHeader -->
<script type="text/javascript">


// jsData 
function gvisDataSankeyIDad543352622e () {
var data = new google.visualization.DataTable();
var datajson =
[
 [
"shared_rg_msp_early",
"to_neuron_msp_early",
113
],
[
"shared_rg_msp_early",
"to_neuron_msp_late",
71
],
[
"shared_rg_msp_early",
"to_neuron_msp_mid",
116
],
[
"shared_rg_msp_early",
"to_neuron_pfc_early",
31
],
[
"shared_rg_msp_early",
"to_neuron_pfc_late",
27
],
[
"shared_rg_msp_early",
"to_neuron_pfc_mid",
72
],
[
"shared_rg_msp_early",
"to_neuron_temporal_early",
13
],
[
"shared_rg_msp_early",
"to_neuron_temporal_late",
40
],
[
"shared_rg_msp_early",
"to_neuron_temporal_mid",
47
],
[
"shared_rg_msp_early",
"to_neuron_v1_early",
47
],
[
"shared_rg_msp_early",
"to_neuron_v1_late",
16
],
[
"shared_rg_msp_early",
"to_neuron_v1_mid",
79
],
[
"shared_rg_msp_late",
"to_neuron_msp_early",
80
],
[
"shared_rg_msp_late",
"to_neuron_msp_late",
133
],
[
"shared_rg_msp_late",
"to_neuron_msp_mid",
153
],
[
"shared_rg_msp_late",
"to_neuron_pfc_early",
62
],
[
"shared_rg_msp_late",
"to_neuron_pfc_late",
31
],
[
"shared_rg_msp_late",
"to_neuron_pfc_mid",
86
],
[
"shared_rg_msp_late",
"to_neuron_temporal_early",
29
],
[
"shared_rg_msp_late",
"to_neuron_temporal_late",
53
],
[
"shared_rg_msp_late",
"to_neuron_temporal_mid",
75
],
[
"shared_rg_msp_late",
"to_neuron_v1_early",
73
],
[
"shared_rg_msp_late",
"to_neuron_v1_late",
36
],
[
"shared_rg_msp_late",
"to_neuron_v1_mid",
102
],
[
"shared_rg_msp_mid",
"to_neuron_msp_early",
211
],
[
"shared_rg_msp_mid",
"to_neuron_msp_late",
245
],
[
"shared_rg_msp_mid",
"to_neuron_msp_mid",
380
],
[
"shared_rg_msp_mid",
"to_neuron_pfc_early",
177
],
[
"shared_rg_msp_mid",
"to_neuron_pfc_late",
76
],
[
"shared_rg_msp_mid",
"to_neuron_pfc_mid",
243
],
[
"shared_rg_msp_mid",
"to_neuron_temporal_early",
43
],
[
"shared_rg_msp_mid",
"to_neuron_temporal_late",
111
],
[
"shared_rg_msp_mid",
"to_neuron_temporal_mid",
173
],
[
"shared_rg_msp_mid",
"to_neuron_v1_early",
116
],
[
"shared_rg_msp_mid",
"to_neuron_v1_late",
60
],
[
"shared_rg_msp_mid",
"to_neuron_v1_mid",
220
],
[
"shared_rg_pfc_early",
"to_neuron_msp_early",
27
],
[
"shared_rg_pfc_early",
"to_neuron_msp_late",
27
],
[
"shared_rg_pfc_early",
"to_neuron_msp_mid",
45
],
[
"shared_rg_pfc_early",
"to_neuron_pfc_early",
67
],
[
"shared_rg_pfc_early",
"to_neuron_pfc_late",
17
],
[
"shared_rg_pfc_early",
"to_neuron_pfc_mid",
20
],
[
"shared_rg_pfc_early",
"to_neuron_temporal_early",
4
],
[
"shared_rg_pfc_early",
"to_neuron_temporal_late",
14
],
[
"shared_rg_pfc_early",
"to_neuron_temporal_mid",
31
],
[
"shared_rg_pfc_early",
"to_neuron_v1_early",
13
],
[
"shared_rg_pfc_early",
"to_neuron_v1_late",
11
],
[
"shared_rg_pfc_early",
"to_neuron_v1_mid",
32
],
[
"shared_rg_pfc_late",
"to_neuron_msp_early",
29
],
[
"shared_rg_pfc_late",
"to_neuron_msp_late",
31
],
[
"shared_rg_pfc_late",
"to_neuron_msp_mid",
42
],
[
"shared_rg_pfc_late",
"to_neuron_pfc_early",
10
],
[
"shared_rg_pfc_late",
"to_neuron_pfc_late",
21
],
[
"shared_rg_pfc_late",
"to_neuron_pfc_mid",
23
],
[
"shared_rg_pfc_late",
"to_neuron_temporal_early",
9
],
[
"shared_rg_pfc_late",
"to_neuron_temporal_late",
26
],
[
"shared_rg_pfc_late",
"to_neuron_temporal_mid",
19
],
[
"shared_rg_pfc_late",
"to_neuron_v1_early",
7
],
[
"shared_rg_pfc_late",
"to_neuron_v1_late",
4
],
[
"shared_rg_pfc_late",
"to_neuron_v1_mid",
19
],
[
"shared_rg_pfc_mid",
"to_neuron_msp_early",
174
],
[
"shared_rg_pfc_mid",
"to_neuron_msp_late",
110
],
[
"shared_rg_pfc_mid",
"to_neuron_msp_mid",
265
],
[
"shared_rg_pfc_mid",
"to_neuron_pfc_early",
107
],
[
"shared_rg_pfc_mid",
"to_neuron_pfc_late",
74
],
[
"shared_rg_pfc_mid",
"to_neuron_pfc_mid",
209
],
[
"shared_rg_pfc_mid",
"to_neuron_temporal_early",
32
],
[
"shared_rg_pfc_mid",
"to_neuron_temporal_late",
59
],
[
"shared_rg_pfc_mid",
"to_neuron_temporal_mid",
79
],
[
"shared_rg_pfc_mid",
"to_neuron_v1_early",
46
],
[
"shared_rg_pfc_mid",
"to_neuron_v1_late",
26
],
[
"shared_rg_pfc_mid",
"to_neuron_v1_mid",
137
],
[
"shared_rg_temporal_early",
"to_neuron_msp_early",
18
],
[
"shared_rg_temporal_early",
"to_neuron_msp_late",
20
],
[
"shared_rg_temporal_early",
"to_neuron_msp_mid",
30
],
[
"shared_rg_temporal_early",
"to_neuron_pfc_early",
17
],
[
"shared_rg_temporal_early",
"to_neuron_pfc_late",
7
],
[
"shared_rg_temporal_early",
"to_neuron_pfc_mid",
25
],
[
"shared_rg_temporal_early",
"to_neuron_temporal_early",
4
],
[
"shared_rg_temporal_early",
"to_neuron_temporal_late",
19
],
[
"shared_rg_temporal_early",
"to_neuron_temporal_mid",
17
],
[
"shared_rg_temporal_early",
"to_neuron_v1_early",
5
],
[
"shared_rg_temporal_early",
"to_neuron_v1_late",
6
],
[
"shared_rg_temporal_early",
"to_neuron_v1_mid",
16
],
[
"shared_rg_temporal_late",
"to_neuron_msp_early",
14
],
[
"shared_rg_temporal_late",
"to_neuron_msp_late",
15
],
[
"shared_rg_temporal_late",
"to_neuron_msp_mid",
22
],
[
"shared_rg_temporal_late",
"to_neuron_pfc_early",
5
],
[
"shared_rg_temporal_late",
"to_neuron_pfc_late",
4
],
[
"shared_rg_temporal_late",
"to_neuron_pfc_mid",
13
],
[
"shared_rg_temporal_late",
"to_neuron_temporal_early",
6
],
[
"shared_rg_temporal_late",
"to_neuron_temporal_late",
20
],
[
"shared_rg_temporal_late",
"to_neuron_temporal_mid",
14
],
[
"shared_rg_temporal_late",
"to_neuron_v1_early",
7
],
[
"shared_rg_temporal_late",
"to_neuron_v1_late",
7
],
[
"shared_rg_temporal_late",
"to_neuron_v1_mid",
10
],
[
"shared_rg_temporal_mid",
"to_neuron_msp_early",
78
],
[
"shared_rg_temporal_mid",
"to_neuron_msp_late",
93
],
[
"shared_rg_temporal_mid",
"to_neuron_msp_mid",
152
],
[
"shared_rg_temporal_mid",
"to_neuron_pfc_early",
46
],
[
"shared_rg_temporal_mid",
"to_neuron_pfc_late",
31
],
[
"shared_rg_temporal_mid",
"to_neuron_pfc_mid",
70
],
[
"shared_rg_temporal_mid",
"to_neuron_temporal_early",
27
],
[
"shared_rg_temporal_mid",
"to_neuron_temporal_late",
43
],
[
"shared_rg_temporal_mid",
"to_neuron_temporal_mid",
106
],
[
"shared_rg_temporal_mid",
"to_neuron_v1_early",
50
],
[
"shared_rg_temporal_mid",
"to_neuron_v1_late",
43
],
[
"shared_rg_temporal_mid",
"to_neuron_v1_mid",
91
],
[
"shared_rg_v1_early",
"to_neuron_msp_early",
151
],
[
"shared_rg_v1_early",
"to_neuron_msp_late",
174
],
[
"shared_rg_v1_early",
"to_neuron_msp_mid",
264
],
[
"shared_rg_v1_early",
"to_neuron_pfc_early",
54
],
[
"shared_rg_v1_early",
"to_neuron_pfc_late",
62
],
[
"shared_rg_v1_early",
"to_neuron_pfc_mid",
119
],
[
"shared_rg_v1_early",
"to_neuron_temporal_early",
74
],
[
"shared_rg_v1_early",
"to_neuron_temporal_late",
97
],
[
"shared_rg_v1_early",
"to_neuron_temporal_mid",
121
],
[
"shared_rg_v1_early",
"to_neuron_v1_early",
109
],
[
"shared_rg_v1_early",
"to_neuron_v1_late",
43
],
[
"shared_rg_v1_early",
"to_neuron_v1_mid",
160
],
[
"shared_rg_v1_late",
"to_neuron_msp_early",
14
],
[
"shared_rg_v1_late",
"to_neuron_msp_late",
44
],
[
"shared_rg_v1_late",
"to_neuron_msp_mid",
40
],
[
"shared_rg_v1_late",
"to_neuron_pfc_early",
12
],
[
"shared_rg_v1_late",
"to_neuron_pfc_late",
3
],
[
"shared_rg_v1_late",
"to_neuron_pfc_mid",
23
],
[
"shared_rg_v1_late",
"to_neuron_temporal_early",
12
],
[
"shared_rg_v1_late",
"to_neuron_temporal_late",
19
],
[
"shared_rg_v1_late",
"to_neuron_temporal_mid",
35
],
[
"shared_rg_v1_late",
"to_neuron_v1_early",
29
],
[
"shared_rg_v1_late",
"to_neuron_v1_late",
36
],
[
"shared_rg_v1_late",
"to_neuron_v1_mid",
38
],
[
"shared_rg_v1_mid",
"to_neuron_msp_early",
133
],
[
"shared_rg_v1_mid",
"to_neuron_msp_late",
136
],
[
"shared_rg_v1_mid",
"to_neuron_msp_mid",
256
],
[
"shared_rg_v1_mid",
"to_neuron_pfc_early",
124
],
[
"shared_rg_v1_mid",
"to_neuron_pfc_late",
70
],
[
"shared_rg_v1_mid",
"to_neuron_pfc_mid",
125
],
[
"shared_rg_v1_mid",
"to_neuron_temporal_early",
23
],
[
"shared_rg_v1_mid",
"to_neuron_temporal_late",
51
],
[
"shared_rg_v1_mid",
"to_neuron_temporal_mid",
84
],
[
"shared_rg_v1_mid",
"to_neuron_v1_early",
63
],
[
"shared_rg_v1_mid",
"to_neuron_v1_late",
37
],
[
"shared_rg_v1_mid",
"to_neuron_v1_mid",
192
] 
];
data.addColumn('string','source.name');
data.addColumn('string','target.name');
data.addColumn('number','n');
data.addRows(datajson);
return(data);
}


// jsDrawChart
function drawChartSankeyIDad543352622e() {
var data = gvisDataSankeyIDad543352622e();
var options = {};
options["width"] = 1500;
options["height"] = 1500;
options["tooltip"] = { textStyle: {color: 'black'}, 
                                       showColorCode: 'True',
                                       isHtml: 'True' 
                                      };
options["sankey"] = { node: {colors: ['orange', 'orange', 'orange', '#e72718', '#e72718', '#e72718', '#ff61e8',
                         '#ff61e8', '#ff61e8', '#1b30f3', '#1b30f3', '#1b30f3', 'orange', 'orange', 'orange', '#e72718', '#e72718', '#e72718', '#ff61e8', '#ff61e8', '#ff61e8', '#1b30f3', '#1b30f3', '#1b30f3', 'orange', 'orange', 'orange', '#e72718', '#e72718',
                         '#e72718', '#ff61e8', '#ff61e8', '#ff61e8', '#1b30f3', '#1b30f3', '#1b30f3', 'orange', 'orange', 'orange', '#e72718', '#e72718', '#e72718', '#ff61e8', '#ff61e8', '#ff61e8', '#1b30f3', '#1b30f3', '#1b30f3', 'orange', 'orange', 'orange',
                         '#e72718', '#e72718', '#e72718', '#ff61e8', '#ff61e8', '#ff61e8', '#1b30f3', '#1b30f3', '#1b30f3', 'orange', 'orange', 'orange', '#e72718', '#e72718', '#e72718', '#ff61e8', '#ff61e8', '#ff61e8', '#1b30f3', '#1b30f3', '#1b30f3',
                         'orange', 'orange', 'orange', '#e72718', '#e72718', '#e72718', '#ff61e8', '#ff61e8', '#ff61e8', '#1b30f3', '#1b30f3', '#1b30f3', 'orange', 'orange', 'orange', '#e72718', '#e72718', '#e72718', '#ff61e8', '#ff61e8', '#ff61e8', '#1b30f3',
                         '#1b30f3', '#1b30f3', 'orange', 'orange', 'orange', '#e72718', '#e72718', '#e72718', '#ff61e8', '#ff61e8', '#ff61e8', '#1b30f3', '#1b30f3', '#1b30f3', 'orange', 'orange', 'orange', '#e72718', '#e72718', '#e72718', '#ff61e8', '#ff61e8',
                         '#ff61e8', '#1b30f3', '#1b30f3', '#1b30f3', 'orange', 'orange', 'orange', '#e72718', '#e72718', '#e72718', '#ff61e8', '#ff61e8', '#ff61e8', '#1b30f3', '#1b30f3', '#1b30f3', 'orange', 'orange', 'orange', '#e72718', '#e72718', '#e72718',
                         '#ff61e8', '#ff61e8', '#ff61e8', '#1b30f3', '#1b30f3', '#1b30f3'] ,
                          width : 30,
                          nodePadding : 50,
                          interactivity: 'True'
                          },
                          label: { color: '#871b47' } , 
                          link: { colorMode: 'gradient' }
                                  };


    chartSankeyIDad543352622e = new google.visualization.ChartWrapper({
    dataTable: data,       
    chartType: 'Sankey',
    containerId: 'SankeyIDad543352622e',
    options: options
    });
    chartSankeyIDad543352622e.draw();
    

}

function openEditorSankeyIDad543352622e() {
  var editor = new google.visualization.ChartEditor();
  google.visualization.events.addListener(editor, 'ok',
  function() { 
  chartSankeyIDad543352622e = editor.getChartWrapper();  
  chartSankeyIDad543352622e.draw(document.getElementById('SankeyIDad543352622e')); 
  }); 
  editor.openDialog(chartSankeyIDad543352622e);
  }


function selectHandler() {
        var selectedItem = chart.getSelection()[0];
        var value = data.getValue(selectedItem.row, 0);
        alert('The user selected ' + value);
}    


// jsDisplayChart
(function() {
var pkgs = window.__gvisPackages = window.__gvisPackages || [];
var callbacks = window.__gvisCallbacks = window.__gvisCallbacks || [];
var chartid = "charteditor";
  
// Manually see if chartid is in pkgs (not all browsers support Array.indexOf)
var i, newPackage = true;
for (i = 0; newPackage && i < pkgs.length; i++) {
if (pkgs[i] === chartid)
newPackage = false;
}
if (newPackage)
  pkgs.push(chartid);
  
// Add the drawChart function to the global list of callbacks
callbacks.push(drawChartSankeyIDad543352622e);
})();

function displayChartSankeyIDad543352622e() {
  var pkgs = window.__gvisPackages = window.__gvisPackages || [];
  var callbacks = window.__gvisCallbacks = window.__gvisCallbacks || [];
  window.clearTimeout(window.__gvisLoad);
  // The timeout is set to 100 because otherwise the container div we are
  // targeting might not be part of the document yet
  window.__gvisLoad = setTimeout(function() {
  var pkgCount = pkgs.length;
  google.load("visualization", "1", { packages:pkgs, callback: function() {
  if (pkgCount != pkgs.length) {
  // Race condition where another setTimeout call snuck in after us; if
  // that call added a package, we must not shift its callback
  return;
}
while (callbacks.length > 0)
callbacks.shift()();
} });
}, 100);
}


// jsFooter
</script>


<!-- jsChart -->  
<script type="text/javascript" src="https://www.google.com/jsapi?callback=displayChartSankeyIDad543352622e"></script>


<!-- divChart -->
<input type='button' onclick='openEditorSankeyIDad543352622e()' value='Edit'/>  
<div id="SankeyIDad543352622e" 
  style="width: 1500; height: 1500;">
</div>

